module.exports.config = {
	name: "joinNoti",
	eventType: ["log:subscribe"],
	version: "1.0.1",
	credits: "CatalizCS",
	description: "Th√¥ng b√°o bot ho·∫∑c ng∆∞·ªùi v√†o nh√≥m c√≥ random gif/·∫£nh/video",
	dependencies: {
		"fs-extra": "",
		"path": ""
	}
};

module.exports.onLoad = function () {
    const { existsSync, mkdirSync } = global.nodemodule["fs-extra"];
    const { join } = global.nodemodule["path"];

	const path = join(__dirname, "cache", "joinGif");
	if (existsSync(path)) mkdirSync(path, { recursive: true });	

	const path2 = join(__dirname, "cache", "joinGif", "randomgif");
    if (!existsSync(path2)) mkdirSync(path2, { recursive: true });

    return;
}


module.exports.run = async function({ api, event, Users, Threads }) {
    const { join } = global.nodemodule["path"];
	const { threadID } = event;
	if (event.logMessageData.addedParticipants.some(i => i.userFbId == api.getCurrentUserID())) {
		api.changeNickname(`[ ${global.config.PREFIX} ] ‚Ä¢ ${(!global.config.BOTNAME) ? "BotMiraiv2" : global.config.BOTNAME}`, threadID, api.getCurrentUserID());
		return api.sendMessage(`\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nùóûùóòÃÇÃÅùóß ùó°ùó¢ÃÇÃÅùóú ùóßùóõùóîÃÇÃÅùóß ùóïùóîÃ£ùóú\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ûù Nh√≥m b·∫°n ch∆∞a ƒë∆∞·ª£c duy·ªát ƒë·ªÉ g·ª≠i y√™u c·∫ßu ` + global.config.PREFIX + `request\n‚ûù Hi·ªán t·∫°i m√¨nh ƒëang c√≥ ${client.commands.size} l·ªánh c√≥ th·ªÉ s·ª≠ d·ª•ng ƒë∆∞·ª£c.\n‚ûù Prefix hi·ªán t·∫°i kh·∫£ d·ª•ng l√†: ` + global.config.PREFIX + `\n‚ûù Li√™n h·ªá admin qua\n‚ûù Fb : https://www.facebook.com/profile.php?id=593577006`, threadID);
	}
  else {
		try {
			const { createReadStream, existsSync, mkdirSync, readdirSync } = global.nodemodule["fs-extra"];
        const moment = require("moment-timezone");
  const time = moment.tz("Asia/Ho_Chi_Minh").format("DD/MM/YYYY || HH:mm:s");
  const hours = moment.tz("Asia/Ho_Chi_Minh").format("HH");
			let { threadName, participantIDs } = await api.getThreadInfo(threadID);
			const threadData = global.data.threadData.get(parseInt(threadID)) || {};
			const path = join(__dirname, "cache", "joinGif");
			const pathGif = join(path, `${threadID}.mp4`);

			var mentions = [], nameArray = [], memLength = [], i = 0;
			
			for (id in event.logMessageData.addedParticipants) {
				const userName = event.logMessageData.addedParticipants[id].fullName;
				nameArray.push(userName);
				mentions.push({ tag: userName, id });
				memLength.push(participantIDs.length - i++);
			}
			memLength.sort((a, b) => a - b);
			
			(typeof threadData.customJoin == "undefined") ? msg = "Welcome thread {type} {name}‚ùóÔ∏è.\nCh√†o m·ª´ng ƒë√£ ƒë·∫øn v·ªõi {threadName}ü•≥.\nB·∫°n l√† th√†nh vi√™n th·ª© {soThanhVien} c·ªßa nh√≥müåÜ.ü¶ã\nCh√∫c b·∫°n c√≥ m·ªôt bu·ªïi {session} || {time} vui v·∫ªüå∏": msg = threadData.customJoin;
			msg = msg
                .replace(/\{name}/g, nameArray.join(', '))
                .replace(/\{type}/g, (memLength.length > 1) ? 'c√°c b·∫°n' : 'b·∫°n')
                .replace(/\{soThanhVien}/g, memLength.join(', '))
                .replace(/\{threadName}/g, threadName)
                .replace(/\{session}/g, hours <= 10 ? "s√°ng" : 
    hours > 10 && hours <= 12 ? "tr∆∞a" :
    hours > 12 && hours <= 18 ? "chi·ªÅu" : "t·ªëi")
                .replace(/\{time}/g, time);

			if (existsSync(path)) mkdirSync(path, { recursive: true });

			const randomPath = readdirSync(join(__dirname, "cache", "joinGif", "randomgif"));

			if (existsSync(pathGif)) formPush = { body: msg, attachment: (await global.nodemodule["axios"]({
			url: (await global.nodemodule["axios"](`http://apis-01.trankhuong20723.repl.co/video/girl`)).data.data,
			method: "GET",
			responseType: "stream"
		})).data, mentions }
			else if (randomPath.length != 0) {
				const pathRandom = join(__dirname, "cache", "joinGif", "randomgif", `${randomPath[Math.floor(Math.random() * randomPath.length)]}`);
				formPush = { body: msg, attachment: (await global.nodemodule["axios"]({
			url: (await global.nodemodule["axios"](`http://apis-01.trankhuong20723.repl.co/video/girl`)).data.data,
			method: "GET",
			responseType: "stream"
		})).data, mentions }
			}
			else formPush = { body: msg, attachment: (await global.nodemodule["axios"]({
			url: (await global.nodemodule["axios"](`http://apis-01.trankhuong20723.repl.co/video/girl`)).data.data,
			method: "GET",
			responseType: "stream"
		})).data, mentions }

			return api.sendMessage(formPush, threadID);
      
		} catch (e) { return console.log(e) };
	}
        }